#! /bin/sh
dnl
dnl Caching is usually WRONG for systems with cross-mounted file systems
dnl (the cache file may correspond to a different system).  Since configure
dnl is not on a performance-critical path, go for robustness over speed.
dnl
define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl
dnl
dnl
AC_INIT()
TEMP_VERSION=""
JUMPSCRIPT=""
#
AC_ARG_ENABLE(echo, [--enable-echo                      - Turn on strong echoing.  The default is enable=no.] ,set -x)
#
AC_ARG_WITH(bindir, [--with-bindir=GEN_BINDIR           - This is the directory where jumpshot's executable will be located.  Without this directory, you can not configure jumpshot. ], GEN_BINDIR=$withval, echo "You need to specify a directory where jumpshot's executable will be copied to!" ; exit 1)
#
AC_ARG_WITH(arch_bindir, [--with-arch_bindir=ARCH_BINDIR     - This is an optional directory (in addition to the bindir directory) where jumpshot's executable will be located.  For example, when configuring with MPICH, this will be the build/ARCH/DEVICE/bin directory. ], ARCH_BINDIR=$withval, ARCH_BINDIR="")
#
AC_ARG_WITH(jumpshot_home,   [--with-jumpshot_home=JUMP_HOME - This is the path of the top-level directory where jumpshot is located.  Without this directory, you can not configure jumpshot.], JUMPSHOT_HOME=$withval, echo "You need to specify the top-level directory where jumpshot is located!" ; exit 1)
#
if test ! -d "$JUMPSHOT_HOME" ; then
    AC_MSG_ERROR("***$JUMPSHOT_HOME is not a valid directory - cannot continue")
fi
#
AC_ARG_WITH(java, [--with-java=JAVA_HOME              - The path of JAVA's top-level directory.  If this option is not given, then configure will try to locate java for you.  ], JAVA_HOME=$withval, JAVA_HOME="")
#
AC_ARG_WITH(java_version, [--with-java_version=VERSION         - The version of JAVA that you will be using.  If this option is not given, then configure will try to locate the version for you ], VERSION=$withval, VERSION="")
#
if test ! -d "$GEN_BINDIR" ; then
    # We really shouldn't depend on -p (not all systems have it)
    mkdir -p "$GEN_BINDIR"
fi
#
if test -n "$ARCH_BINDIR" -a ! -d "$ARCH_BINDIR" ; then
    # We really shouldn't depend on -p (not all systems have it)
    mkdir -p "$ARCH_BINDIR"
fi
#
subdir=""
AC_CANONICAL_HOST
case "$host" in
    mips-sgi-irix*)
	if test -d "/software/irix" ; then
	    subdir="irix"
	elif test -d "/software/irix-6" ; then
	    subdir="irix-6"
	fi
	;;
    *linux*)
	if test -d "/software/linux" ; then
	    subdir="linux"
	fi
	;;
   *solaris*)
	if test -d "/software/solaris" ; then
	    subdir="solaris"
	elif test -d "/software/solaris-2" ; then
	    subdir="solaris-2"
	fi
	;;
    *sun4*)
	if test -d "/software/sun4" ; then
	    subdir="sun4"
	fi
	;;
   *aix*)
	if test -d "/software/aix-4" ; then
	    subdir="aix-4"
	fi
	;;
   *rs6000*)
	if test -d "/software/aix-4" ; then
	    subdir="aix-4"
	fi
	;;
   *freebsd*)
	if test -d "/software/freebsd" ; then
	    subdir="freebsd"
	fi
esac
if test -z "$subdir" ; then
    if test -d "/software/common" ; then
        subdir="common"
    fi
fi
if test -z "$JAVA_HOME" ; then
for dir in $PATH \
    /usr \
    /usr/jdk* \
    /usr/java* \
    /usr/local \
    /usr/local/jdk* \
    /usr/local/java* \
    /usr/contrib \
    /usr/contrib/jdk* \
    /usr/contrib/java* \
    $HOME/jdk* \
    $HOME/java* \
    /opt/jdk* \
    /opt/java* \
    /opt/local \
    /opt/local/jdk* \
    /opt/local/java* \
    /usr/bin \
    /Tools/jdk* \
    /usr/jdk* \
    /usr/java* \
    /software/$subdir/apps/packages/jdk* \
    /software/$subdir/apps/packages/java* \
    /software/$subdir/com/packages/jdk* \
    /software/$subdir/com/packages/java* \
    /local/encap/jdk* \
    /local/encap/java* ; do
    if test -d $dir ; then
        java_type1=`echo $dir | grep 'java-workshop*'`
        java_type2=`echo $dir | grep 'java*'`
        java_type3=`echo $dir | grep 'jdk*'`	    
        if test -n "$java_type1"; then
	    if test -d "$dir/JDK/bin" ; then
	        if test -x "$dir/JDK/bin/java" -a "$dir/JDK/bin/jre" ; then
	            JAVA_HOME="$dir/JDK"
	            break
	        fi
	    fi
        elif test -n "$java_type2" -o "$java_type3" ; then
	    if test -x "$dir/bin/java" -a "$dir/bin/jre" ; then
	        JAVA_HOME="$dir"
	        break
	    fi
	fi
    fi
done
fi
if test -z "$JAVA_HOME" ; then
    AC_MSG_WARN("Cannot find JAVA!")
    AC_MSG_ERROR("Please put JAVA in your path and reconfigure")
fi
if test -z "$VERSION" ; then
    VERSION=`$JAVA_HOME/bin/java -version 2>&1 | grep 1.1`
    if test -z "$VERSION" ; then
        VERSION=`$JAVA_HOME/bin/java -version 2>&1 | grep 1.2`
        if test -z "$VERSION" ; then
            echo "Cannot determine version of java"
            echo "Using the build/unix/bin/jumpshot script to execute JUMPSHOT"
            echo "This may cause problems if you are using version 1.2 or higher"
            JUMPSCRIPT="build/unix/bin/jumpshot"	
        else
	    echo "Java Version is $VERSION"
	    JUMPSCRIPT="build/unix/bin/jumpshot12"
        fi
    else
        echo "Java Version is $VERSION"
        JUMPSCRIPT="build/unix/bin/jumpshot"
    fi
else
    TEMP_VERSION=`echo $VERSION | grep 1.1`
    if test -z "$TEMP_VERSION" ; then
        TEMP_VERSION=`echo $VERSION | grep 1.2`
	if test -z "$TEMP_VERSION" ; then
            echo "Cannot determine if you are using version 1.1.* or 1.2.*"
            echo "Using the build/unix/bin/jumpshot script to execute JUMPSHOT"
            echo "This may cause problems if you are using version 1.2 or higher"
            JUMPSCRIPT="build/unix/bin/jumpshot"
        else
            echo "Java Version is $VERSION"
	    JUMPSCRIPT="build/unix/bin/jumpshot12"
	fi				
    else
        echo "Java Version is $VERSION"
        JUMPSCRIPT="build/unix/bin/jumpshot"
    fi
fi
#
AC_SUBST(JAVA_HOME)
AC_SUBST(JUMPSHOT_HOME)
AC_OUTPUT($JUMPSCRIPT)

if test -f "$JUMPSCRIPT" ; then
    chmod a+x $JUMPSCRIPT
else
    AC_MSG_ERROR("***$JUMPSCRIPT is not a valid file - Make sure you have")
    AC_MSG_ERROR("   configured with a valid JUMPSHOT home directory")
fi
#    
if test -z "$ARCH_BINDIR" ; then
    if test -f $GEN_BINDIR/jumpshot ; then
        /bin/rm -f $GEN_BINDIR/jumpshot
    fi
    echo "Jumpshot's executable will be located in $GEN_BINDIR"
    echo "Make sure you set your path to include this directory!"
    cp $JUMPSCRIPT $GEN_BINDIR
else
    if test -f $GEN_BINDIR/jumpshot ; then
        /bin/rm -f $GEN_BINDIR/jumpshot
    fi
    if test -f $ARCH_BINDIR/jumpshot ; then
        /bin/rm -f $ARCH_BINDIR/jumpshot
    fi
    echo "Jumpshot's executable will be located in $GEN_BINDIR"
    echo "and $ARCH_BINDIR"
    echo "Make sure you set your path to include at least one of these directories!"
    cp $JUMPSCRIPT $GEN_BINDIR
    cp $JUMPSCRIPT $ARCH_BINDIR
fi


