09/30/2002 (1.2.4..8b):
-----------------------

* Fixed bug in local processes detection using MPD, it was impossible to use 
  shared memory with MPD.
* Fixed bug in processing of unexpected self messages generated by 
  blocking send calls (improperly calling rhandle->finish). We can discuss 
  about the validity of unexpected blocking send to self...
* Merge Totalview support that was not merged for release, somehow.
* Add support for DDT debugger.
* Add a protection to prevent the usage of the shared memory device at the 
  same time than blocking or hybrid GM receive mode. Devices are not allowed 
  to block in a multi-devices configuration.
* Fix a bug in the configure script to effectively disable memory registration
  to use MPICH-GM on Solaris.
* Limit the rate of unexpected queue and delayed queue increase to avoid memory 
  exhaustion with pathological (but still in spec) applications.
* Add a test to check if the malloc hooks used by MPICH-GM with memory registration 
  are used and not overloaded by another definition of malloc in another somewhere 
  else.
* Minor typo corrections.


08/09/2002 (1.2.4..8a):
-----------------------

* Propagate the Machine file name from the mpirun call to the mpirun.ch_gm.pl 
  Perl script, if any.
* Better support/compatibility for Procgroup file (Thanks Maxim from .ru).
* Support for change of working directory (flag "-wd") and use of current 
  directory as default working directory (Thanks Luc Renambot from .nl). 


MPICH-GM 1.2.4..8:
==================

* New mpirun.ch_gm script:
  - Support for ProcGroup file, for spawning multiple executables (no support
    for heterogeneous configuration yet), using the flag "-pg".
  - Possibility to close stdin on the process MPI Id 0, to put jobs in
    background, using the flag "-s".
  - Perl script completely rewritten (usage and flags available with
    "mpirun.ch_gm" without arguments).
* Use of MPICH machine file instead of MPICH-GM specific "conf" file:
  GM ports are now dynamically and locally allocated by each process.
* Support for MPD (Multi-Purpose Daemon) for large configurations.
* Complete implementation of MPI_Abort().
* Implementation of MPI_Cancel for shared-memory messages.
* Shared memory support for intra-node communication is enabled by default,
  and may be disabled at run-time.  If you pass the "--gm-no-shmem" flag to
  mpirun.ch_gm at run-time, the shared memory device will be disabled.
* One major bug fix (GM Send timeout) and various minor ones.
* more hooks for progression in core, should slightly increase performance
  (your mileage may vary).
