
#
#  $Id: Makefile.in,v 1.2 2002/07/29 06:43:28 geoffray Exp $
#
#  (C) 1993,1995 by Argonne National Laboratory and Mississipi State University.
#      All rights reserved.  See COPYRIGHT in top-level directory.
#
# Eventually, there will be two sets of routines
#
#
##### User configurable options #####

CC          = @CC@
AR          = @AR@
RANLIB      = @RANLIB@
OPTFLAGS    = @OPTFLAGS@
SHELL       = /bin/sh
MAKE        = @MAKE@
ASMFILES_O  = @ASMFILES_O@
prefix      = @prefix@
top_srcdir  = @top_srcdir@
srcdir      = @srcdir@
libbuild_dir = @libbuild_dir@
DEFS        = @DEFS@ -I. -I${srcdir} @mpich_includes@ -DHAVE_MPICH_MPID_H \
		-DMPID_DEVICE_CODE @GETNAME_DEFS@ @DEVCFLAGS@ @DEV_DEFS@

@VPATH@

include gmpi_malloc_obj

#ALL: default
ALL: libdev

MPD_HOME = ../mpd
LIBNAME  = ${libbuild_dir}/lib@MPILIBNAME@.a
LIBDEV   = libmpid.a
CFLAGS   = @CFLAGS@ $(OPTFLAGS) @OPTFLAGSC@ -I${MPD_HOME} \
	   	-I${top_srcdir}/mpid/ch2 -I${top_srcdir}/mpid/util

# See mpid/ch_adi2/Makefile.in for a full list
SOURCE   = adi2recv.c adi2send.c adi2init.c adi2probe.c adi2ssend.c \
	   adi2hsend.c adi2hrecv.c adi2pack.c adi2mpack.c \
	   adi2hssend.c bswap2.c adi2req.c adi2cancel.c \
	   chdebug.c chnodename.c chtick.c \
	   queue.c cmnargs.c mprerr.c tr2.c sbcnst2.c objtrace.c \
	   calltrace.c gmpi_chcancel.c \
	   ch_ldebug.c @DEVCFILES@
SOURCEC  = $(SOURCE)
SOURCEF  =
MPI_OBJECTS = adi2recv.o adi2send.o adi2init.o adi2probe.o adi2ssend.o \
	      adi2hsend.o adi2hrecv.o adi2pack.o adi2mpack.o \
	      adi2hssend.o bswap2.o adi2req.o adi2cancel.o \
	      chdebug.o chnodename.o chtick.o \
	      $(ASMFILES_O) queue.o cmnargs.o tr2.o sbcnst2.o \
	      objtrace.o calltrace.o gmpi_chcancel.o \
	      gmpi_chinit.o gmpi_conf.o gmpi_priv.o \
	      gmpi_chshort.o gmpi_chnrndv.o gmpi_chself.o \
	      gmpi_debug_checksum.o gmpi_debug_dma_memory.o \
	      gmpi_debug_fifo_send.o gmpi_debug_gm_send_recv.o \
	      gmpi_debug_regcache.o gmpi_debug_registration.o \
	      gmpi_smpshort.o gmpi_smprndv.o \
	      gmpi_smpinit.o gmpi_smppriv.o gmpi_smpdebug.o \
	      $(GMPI_MALLOC_OBJ) gmpi_regcache.o \
	      ch_ldebug.o @DEVOFILES@

MPD_OBJECTS = $(MPD_HOME)/mpdlib.o $(MPD_HOME)/bnr.o


default: $(LIBNAME)
libdev: $(LIBDEV)

$(MPI_OBJECTS): ${srcdir}/chdef.h

# default_all is the same as default, but without the RANLIB.  This
# can speed up the build (ranlibs can take a LONG time).  profile_all 
# is the same, but for the profile library
default_all: setlinks mpdstuff default_files
default_files: $(MPI_OBJECTS) $(MPD_OBJECTS)
	$(AR) $(LIBNAME) $?
profile_all: 

mpdstuff:
	@echo "making mpdstuff ..."
	@( cd $(MPD_HOME); $(MAKE) )

clean:
	/bin/rm -f *~ $(MPI_OBJECTS) libmpid.a mprerr.o
	/bin/rm -f ${srcdir}/*.o
	@(cd $(MPD_HOME); if [ -f Makefile ] ; then  $(MAKE) clean ; fi)

distclean: clean
	@for file in $(SOURCE) ; do  \
	    if [ -h $$file ] ; then \
		/bin/rm -f $$file ; \
	    fi \
	done
	@for file in $(MPIDHEADERS) ; do \
	    if [ -h $$file ] ; then \
		/bin/rm -f $$file ; fi ; \
	done
	@if [ -h mpiddev.h ] ; then \
	    rm -f mpiddev.h ; fi
	/bin/rm -f Makefile
	/bin/rm -f localdefs config.status config.log mpich-mpid.h mpirun.ch_gm
	@(cd ../mpd; ${MAKE} distclean )


MPIDHEADERS = mpid.h req.h comm.h datatype.h chhetero.h attach.h objtrace.h \
	      calltrace.h cookie.h mpid_bind.h reqalloc.h tr2.h mpimem.h \
	      sbcnst2.h dev.h gmpi.h gmpi_smp.h gmpi_noreg.h \
	      gmpi_debug_checksum.h gmpi_debug_dma_memory.h \
	      gmpi_debug_fifo_send.h gmpi_debug_gm_send_recv.h \
	      gmpi_debug_regcache.h gmpi_debug_registration.h
setlinks:
	@for file in $(SOURCE) ; do  \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/ch2/$$file ] ; then \
	 	ln -s ${top_srcdir}/mpid/ch2/$$file $$file ; fi ; \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/util/$$file ] ; then \
		ln -s ${top_srcdir}/mpid/util/$$file $$file ; fi ; \
	done
	@for file in $(MPIDHEADERS) ; do \
	    if [ ! -s $$file -a -s ${top_srcdir}/mpid/ch2/$$file ] ; then \
		ln -s ${top_srcdir}/mpid/ch2/$$file $$file ; \
	    elif [ ! -s $$file -a -s ${top_srcdir}/mpid/util/$$file ] ; then \
		ln -s ${top_srcdir}/mpid/util/$$file $$file ; fi ; \
	done
	@if [ ! -s mpiddev.h ] ; then \
	    ln -s ${top_srcdir}/mpid/ch2/mpiddevbase.h mpiddev.h ; fi


gmpi_malloc.o: gmpi_malloc.c
	$(CC) $(DEFS) $(CFLAGS) -O2 -c gmpi_malloc.c

.c.o:
	$(CC) $(DEFS) $(CFLAGS) -c $< $(MPI_PROFILE)

$(LIBNAME): $(MPI_OBJECTS) 
	$(AR) $@ $?
	$(RANLIB) $@

libmpid.a: $(MPI_OBJECTS) mprerr.o
	$(AR) $@ $?
	$(RANLIB) $@

configure: configure.in
	autoheader --localdir=../..
	autoconf   --localdir=../..
