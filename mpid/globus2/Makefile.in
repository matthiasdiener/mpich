#
#  $Id: Makefile.in,v 1.17 2001/10/05 16:20:20 toonen Exp $
#
#  (C) 1993,1995 by Argonne National Laboratory and Mississipi State University.
#      All rights reserved.  See COPYRIGHT in top-level directory.
#
# Eventually, there will be two sets of routines
#
#
##### User configurable options #####

ARCH             = @ARCH@
DEVICE           = @DEVICE@
MPIR_HOME        = @MPIR_HOME@
INCLUDE_DIR      = @INCLUDE_PATH@
CC               = @CC@
AR               = @AR@
RANLIB           = @RANLIB@
OPTFLAGS         = @OPTFLAGS@
SHELL            = /bin/sh
ASMFILES_O       = @ASMFILES_O@
prefix           = @prefix@
top_srcdir       = @top_srcdir@
srcdir           = @srcdir@
builddir         = @builddir@
libbuild_dir     = @libbuild_dir@
binbuild_dir     = @binbuild_dir@
includebuild_dir = @includebuild_dir@
### End User configurable options ###
@VPATH@

ALL: default

LIBNAME     = ${libbuild_dir}/lib@MPILIBNAME@.a

INCLUDES    = -I. -I$(srcdir) -I$(builddir) -I$(includebuild_dir) \
	      -I$(top_srcdir)/include
CFLAGS      = @CFLAGS@ $(OPTFLAGS) -DMPI_$(ARCH) -DMPID_DEVICE_CODE \
	      $(INCLUDES) @GETNAME_DEFS@ @DEVCFLAGS@ @DEV_DEFS@

CIAS        = init_g.A send_g.A recv_g.A probe_g.A pack_g.A pr_tcp_g.A \
	      pr_mpi_g.A vmpi_g.A comm_g.A debug_g.A datatype_g.A \
	      cmnargs.A queue.A sbcnst2.A chdebug.A chnodename.A chtick.A \
	      mpi2.A topology_intra_fns.A topology_clusters.A

SOURCE      = init_g.c send_g.c recv_g.c probe_g.c pack_g.c pr_tcp_g.c \
	      pr_mpi_g.c vmpi_g.c comm_g.c debug_g.c datatype_g.c \
	      cmnargs.c queue.c sbcnst2.c chdebug.c chnodename.c chtick.c \
	      mpi2.c topology_intra_fns.c topology_clusters.c

SOURCEC     = $(SOURCE)

SOURCEF     =

MPI_OBJECTS = init_g.o send_g.o recv_g.o probe_g.o pack_g.o pr_tcp_g.o \
	      pr_mpi_g.o vmpi_g.o comm_g.o debug_g.o datatype_g.o \
	      cmnargs.o queue.o sbcnst2.o chdebug.o chnodename.o chtick.o \
	      mpi2.o topology_intra_fns.o topology_clusters.o \
	      $(ASMFILES_O) @DEVOFILES@

default: $(LIBNAME)

local: libmpid.a

# default_all is the same as default, but without the RANLIB.  This
# can speed up the build (ranlibs can take a LONG time).  profile_all 
# is the same, but for the profile library.  

default_all: $(MPI_OBJECTS)
	$(AR) $(LIBNAME) $(MPI_OBJECTS)
profile_all: 

#
# setlinks rule required MPICH
#
setlinks: prebuild
	rm -f cmnargs.h
	ln -s ${top_srcdir}/mpid/util/cmnargs.h .
	rm -f cmnargs.c
	ln -s ${top_srcdir}/mpid/util/cmnargs.c .
	rm -f queue.h
	ln -s ${top_srcdir}/mpid/util/queue.h .
	rm -f queue.c
	ln -s ${top_srcdir}/mpid/util/queue.c .
	rm -f sbcnst2.h
	ln -s ${top_srcdir}/mpid/util/sbcnst2.h .
	rm -f sbcnst2.c
	ln -s ${top_srcdir}/mpid/util/sbcnst2.c .
	rm -f chdebug.c
	ln -s ${top_srcdir}/mpid/ch2/chdebug.c .
	rm -f chnodename.c
	ln -s ${top_srcdir}/mpid/ch2/chnodename.c .
	rm -f dev.h
	ln -s ${top_srcdir}/mpid/ch2/dev.h .
	rm -f mpid.h
	ln -s ${top_srcdir}/mpid/ch2/mpid.h .
	rm -f attach.h
	ln -s ${top_srcdir}/mpid/ch2/attach.h .
	rm -f calltrace.h
	ln -s ${top_srcdir}/mpid/ch2/calltrace.h .
	rm -f chhetero.h
	ln -s ${top_srcdir}/mpid/ch2/chhetero.h .
	rm -f cookie.h
	ln -s ${top_srcdir}/mpid/ch2/cookie.h .
	rm -f mpid_bind.h
	ln -s ${top_srcdir}/mpid/ch2/mpid_bind.h .
	rm -f objtrace.h
	ln -s ${top_srcdir}/mpid/ch2/objtrace.h .
	rm -f chpackflow.h
	ln -s ${top_srcdir}/mpid/ch2/chpackflow.h .
	rm -f packets.h
	ln -s ${top_srcdir}/mpid/ch2/packets.h .
	rm -f mpid_debug.h
	ln -s ${top_srcdir}/mpid/ch2/mpid_debug.h .
	rm -f mpiddev.h
	ln -s ${top_srcdir}/mpid/ch2/mpiddevbase.h ./mpiddev.h
	rm -f mpimem.h
	ln -s ${top_srcdir}/mpid/ch2/mpimem.h .
	rm -f tr2.h
	ln -s ${top_srcdir}/mpid/util/tr2.h  .
	rm -f channel.h
	ln -s ${top_srcdir}/mpid/ch2/channel.h  .
	rm -f coll.h
	ln -s ${top_srcdir}/src/coll/coll.h .


prebuild: FORCE
	@. $(builddir)/mpid/$(DEVICE)/mpich-globus2-settings ;		\
	if test $${F77_SED} -ne 0 ; then				\
	    mv $(builddir)/src/fortran/include/mpif.h			\
		$(builddir)/src/fortran/include/mpif.h.orig ;		\
	    sed -e 's/^[mM][pP][iI]_/MPQ_/g'				\
		-e 's/^[pP][mM][pP][iI]_/PMPQ_/g'			\
		-e 's/\([^A-Za-z0-9_]\)[mM][pP][iI]_/\1MPQ_/g'		\
		-e 's/\([^A-Za-z0-9_]\)[pP][mM][pP][iI]_/\1PMPQ_/g'	\
		$(builddir)/src/fortran/include/mpif.h.orig		\
		>$(builddir)/src/fortran/include/mpif.h ;		\
	    cp $(builddir)/src/fortran/include/mpif.h			\
		 $(includebuild_dir) ;					\
	fi


clean:
	rm -f *~ $(MPI_OBJECTS)


distclean: clean
	@. $(builddir)/mpid/$(DEVICE)/mpich-globus2-settings ;		\
	if test $${VMPI} -ne 0 ; then					\
	    rm -f $(includebuild_dir)/mpid_defs.h ;		\
	fi ;								\
	if test $${F77_SED} -ne 0 ; then				\
	    rm -f $(builddir)/src/fortran/include/mpif.h.orig	\
		       $(builddir)/src/fortran/include/mpid_fortdefs.h	\
		       $(includebuild_dir)/mpid_fortdefs.h ;		\
	fi
	rm -f $(builddir)/mpid/$(DEVICE)/chconfig.h		\
		   $(builddir)/mpid/$(DEVICE)/mpich-globus2-settings	\
		   $(builddir)/mpid/$(DEVICE)/mpirun.globus2		\
		   $(binbuild_dir)/mpich-globus2-cc			\
		   $(binbuild_dir)/mpich-globus2-CC			\
		   $(binbuild_dir)/mpich-globus2-f77			\
		   $(binbuild_dir)/mpich-globus2-f90
	rm -f cmnargs.h
	rm -f cmnargs.c
	rm -f queue.h
	rm -f queue.c
	rm -f sbcnst2.h
	rm -f sbcnst2.c
	rm -f chdebug.c
	rm -f chnodename.c
	rm -f dev.h
	rm -f mpid.h
	rm -f attach.h
	rm -f calltrace.h
	rm -f chhetero.h
	rm -f cookie.h
	rm -f mpid_bind.h
	rm -f objtrace.h
	rm -f chpackflow.h
	rm -f packets.h
	rm -f mpid_debug.h
	rm -f mpiddev.h
	rm -f mpimem.h
	rm -f tr2.h
	rm -f channel.h
	rm -f coll.h


$(MPI_OBJECTS): dev.h req.h mpid.h

#
# this NEEDS to be compiled seperately, without all the
# globus and mpich header files
#
pr_mpi_g.o:	$(srcdir)/pr_mpi_g.c
	$(CC) -I. -I${srcdir} @DEV_DEFS@ @DEVCFLAGS@ -DVMPI_NO_MPICH \
	  -DMPICH_ARCH_$(ARCH) -c $(srcdir)/pr_mpi_g.c

.c.A:
	cia $(CFLAGS) $(BASEOPT) -c $< $(MPI_PROFILE)

.c.o:
	$(CC) $(CFLAGS) $(BASEOPT) -c $< $(MPI_PROFILE)

.o.s:
	$(CC) $(CFLAGS) $(BASEOPT) -c -S $< $(MPI_PROFILE)

CIA: $(CIAS)
	cia $(CIAS)

${libbuild_dir}/lib@MPILIBNAME@.a: $(MPI_OBJECTS) 
	$(AR) $@ $?
	$(RANLIB) $@

libmpid.a: $(MPI_OBJECTS) 
	$(AR) $@ $?
	$(RANLIB) $@

FORCE:
