
# Makefile.in
#
# rcsid = "$Header: /nfs/globus1/src/master/nexus_top/Makefile.in,v 1.15 1997/01/21 23:00:06 tuecke Exp $"
#

# This is inserted by configure
@makefile_header@

SUBDIRS= @SUBDIRS@

#
# This is the default rule.  It makes the entire program in all the
# sub-directories.  It does not, however make any documentation.
#
all:
	for subdir in $(SUBDIRS); do \
	    if [ -d $$subdir -a -f $$subdir/Makefile ] ; then \
	        echo "making in $$subdir" ; \
	        (cd $$subdir && $(MAKE)) ; \
	    fi \
        done

#
# This makes all documentation (in the form of dvi files)
#
dvi:
	for subdir in @DOCDIRS@; do \
	    if [ -d $$subdir -a -f $$subdir/Makefile ] ; then \
	        echo "making dvi in $$subdir" ; \
	        (cd $$subdir && $(MAKE) dvi) ; \
	    fi \
	done

test: 
	(cd test && $(MAKE) test)

#
# This cleans most files, but fails to remove those that people want to
# keep most of the time
#
mostlyclean:
	for subdir in @SUBDIRS@; do \
	    if [ -d $$subdir -a -f $$subdir/Makefile ] ; then \
	        echo "making mostlyclean in $$subdir" ; \
	        (cd $$subdir && $(MAKE) mostlyclean) ; \
	    fi \
	done

#
# This cleans all files created by a build, but not by a configure
#
CLEAN_FILES= \
	lib \
	include

clean:
	for subdir in @SUBDIRS@; do \
	    if [ -d $$subdir -a -f $$subdir/Makefile ] ; then \
	        echo "making clean in $$subdir" ; \
	        (cd $$subdir && $(MAKE) clean) ; \
	    fi \
	done
	rm -rf $(CLEAN_FILES)

#
# This cleans all files created by both build and configure.  When this
# rule is done a simple tar and gzip should suffice.  NO EXTRA files
# from the distribution should be left.  If some files in the
# distriubtion can be made by the Makefile, but normally are kept in
# already made, these should still remain.  To get rid of them, use the
# maintainer-clean rule.
#
DISTCLEAN_FILES=config.cache \
	config.log \
	config.status \
	Makefile \
	makefile_header \
	stamp-h

distclean:
	for subdir in @SUBDIRS@; do \
	    if [ -d $$subdir -a -f $$subdir/Makefile ] ; then \
	        echo "making distclean in $$subdir" ; \
	        (cd $$subdir && $(MAKE) distclean) ; \
	    fi \
	done
	rm -f $(DISTCLEAN_FILES)

#
# I got these rules from the GNU standard.  We don't need to implement
# all of them, but some are a really good idea.  I just want to get all
# of my changes into the repository
#
# install: compile program, copy the executables, libraries,  and test for
# valid install if test exists

#install: all
#	for subdir in nexus; do \
#	    if [ -d $$subdir -a -f $$subdir/Makefile ] ; then \
#	        echo "making install in $$subdir" ; \
#	        (cd $$subdir && $(MAKE) install) ; \
#	    fi \
#	done

examplesdir=$(prefix)/examples

install:
	if [ ! -d $(prefix) ] ; then \
	    mkdir $(prefix) ; \
	fi ; \
	if [ ! -d $(libdir) ] ; then \
	    mkdir $(libdir) ; \
	fi ; \
	if [ ! -d $(examplesdir) ] ; then \
	    mkdir $(examplesdir) ; \
	fi ; \
	for srcfile in ./lib/* ; do \
	    cp $$srcfile $(libdir)/. ; \
	done ; \
	if [ ! -d $(includedir) ] ; then \
	    mkdir $(includedir) ; \
	fi ; \
	for srcfile in ./include/* ; do \
	    cp $$srcfile $(includedir)/. ; \
	done ;\
	cp ./nexus/makefile_header $(prefix)/. ; \
	cp $(srcdir)/examples/Makefile.sample $(examplesdir)/.
	    

# uninstall: delete installed files
# maintainer-clean: almost everything that can be reconstructed with Make except configure
# dist: create a distribution tar file
# check: perform self-tests
# installcheck: perform installation tests
# installdirs: create directories where files are installed
