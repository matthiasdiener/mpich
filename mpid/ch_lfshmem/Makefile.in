#
#  $Id: Makefile.in,v 1.4 1996/07/17 18:07:23 gropp Exp $
#
#  (C) 1993,1995 by Argonne National Laboratory and Mississipi State University.
#      All rights reserved.  See COPYRIGHT in top-level directory.
#
# Eventually, there will be two sets of routines
#
#
##### User configurable options #####

ARCH        = @ARCH@
COMM        = @COMM@
DEVICE      = @DEVICE@
MPIR_HOME   = @MPIR_HOME@
INCLUDE_DIR = @INCLUDE_PATH@ -Impid/@DEVICE@ -Iinclude
CC          = @CC@
ASM	    = @ASM@
AR          = @AR@
RANLIB      = @RANLIB@
OPTFLAGS    = @OPTFLAGS@
SHELL       = /bin/sh
ASMFILES_O  = @ASMFILES_O@
# For the NEC SX-4, these are vtest1.o syncvset0.o syncvset1.o vmemcpy.o
# "as vtest1.s" etc
#
### End User configurable options ###

#ALL: default
ALL: libdev

LIBNAME  = ../../lib/$(ARCH)/$(COMM)/lib@MPILIBNAME@.a
LIBDEV   = libmpid.a
CFLAGS   = @CFLAGS@ $(OPTFLAGS) @OPTFLAGSC@ \
	   	-I../.. -I../../include -I./ -I../ch2 \
		-I../util -DMPI_@ARCH@ \
		-DMPID_DEVICE_CODE @GETNAME_DEFS@ @DEVCFLAGS@ @DEV_DEFS@
# See mpid/ch2/Makefile.in for a full list
# Many of the chxxxx files are replaced with shmemxxxx files because the
# shared memory version uses a slightly different form, in particular, it
# allocates packets from a shared area rather than on the call stack.
# chbeager.c chbrndv.c 
SOURCE   = adi2recv.c adi2send.c adi2init.c adi2probe.c adi2ssend.c \
	   adi2hsend.c adi2hrecv.c adi2hssend.c adi2pack.c adi2mpack.c \
	   adi2req.c adi2cancel.c \
	   shmemdebug.c shmemchkdev.c \
           shmemshort.c shmemneager.c shmemnrndv.c lfshmempriv.c p2p.c \
	   shmeminit.c chnodename.c chtick.c queue.c cmnargs.c \
	   mprerr.c tr2.c sbcnst2.c @DEVCFILES@
SOURCEC  = $(SOURCE)
SOURCEF  =
# chbeager.o chbrndv.o 
MPI_OBJECTS = adi2recv.o adi2send.o adi2init.o adi2probe.o adi2ssend.o \
	      adi2hsend.o adi2hrecv.o adi2hssend.o adi2pack.o adi2mpack.o \
	      adi2req.o adi2cancel.o \
	      shmemdebug.o shmemchkdev.o \
	      shmemshort.o shmemneager.o shmemnrndv.o lfshmempriv.o p2p.o \
	      shmeminit.o chnodename.o chtick.o queue.o cmnargs.o \
	      tr2.o sbcnst2.o \
	      $(ASMFILES_O) @DEVOFILES@

default: $(LIBNAME)
libdev: $(LIBDEV)

$(MPI_OBJECTS): ../ch2/mpid.h mpiddev.h shdef.h
p2p.o: p2psemop.c p2p.c 

# default_all is the same as default, but without the RANLIB.  This
# can speed up the build (ranlibs can take a LONG time).  profile_all 
# is the same, but for the profile library
default_all: setlinks default_files
default_files: $(MPI_OBJECTS)
	$(AR) $(LIBNAME) $?
profile_all: 

clean:
	/bin/rm -f *~ $(MPI_OBJECTS) libmpid.a mprerr.o

setlinks:
	for file in $(SOURCE) ; do  \
	    if [ ! -s $$file -a -s ../ch2/$$file ] ; then \
	 	ln -s ../ch2/$$file $$file ; fi ; \
	    if [ ! -s $$file -a -s ../util/$$file ] ; then \
		ln -s ../util/$$file $$file ; fi ; \
	done
.c.o:
	if [ ! -s $*.c ] ; then ln -s ../ch2/$*.c $*.c ; fi
	$(CC) $(CFLAGS) $(BASEOPT) -c $*.c $(MPI_PROFILE)

.o.s:
	$(CC) $(CFLAGS) $(BASEOPT) -c -S $*.c $(MPI_PROFILE)

.s.o:
	$(ASM) -o $*.o $*.s

../../lib/$(ARCH)/$(COMM)/lib@MPILIBNAME@.a: $(MPI_OBJECTS) 
	$(AR) $@ $?
	$(RANLIB) $@

libmpid.a: $(MPI_OBJECTS) mprerr.o
	$(AR) $@ $?
	$(RANLIB) $@

lint:
	lint -chvuz -I../.. -I../../include -I../ch2 \
		-I./ \
	-DMPID_DEVICE_CODE $(SOURCE) ../util/queue.c ../util/cmnargs.c

