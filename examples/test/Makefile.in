ALL: default
##### User configurable options #####

ARCH        = @ARCH@
COMM        = @COMM@
BOPT        = @BOPT@
P4_DIR      = @P4_DIR@
TOOLS_DIR   = @TOOLS_DIR@
MPIR_HOME   = @MPIR_HOME@
CC          = @CC@
CLINKER     = @CLINKER@
CCC         = @CPP_COMPILER@
CCLINKER    = $(CCC)
F77         = @F77@
FLINKER     = @FLINKER@
AR          = @AR@
RANLIB      = @RANLIB@
PROFILING   = $(PMPILIB)
OPTFLAGS    = @OPTFLAGS@
INCLUDE_DIR = @USER_INCLUDE_PATH@ -I$(MPIR_HOME)/include 
DEVICE      = @DEVICE@

### End User configurable options ###

SHELL = /bin/sh

CFLAGS  = @USER_CFLAGS@ $(OPTFLAGS) $(INCLUDE_DIR) -DMPI_$(ARCH)
CCFLAGS = $(CFLAGS)
#FFLAGS = '-qdpc=e' 
FFLAGS = @FFLAGS@ $(OPTFLAGS)
MPILIB = $(MPIR_HOME)/lib/$(ARCH)/$(COMM)/libmpi.a 
MPIPPLIB = $(MPIR_HOME)/lib/$(ARCH)/$(COMM)/libmpi++.a
LIBS = $(MPILIB) $(DEVICE_LIB)
LIBSPP = $(MPIPPLIB) $(LIBS)
TESTDIRS = pt2pt coll topol env context 
SUBDIRS = pt2pt coll topol env context

default: subdirs
	@echo "Type \"make testing\" to compile and run tests"

subdirs:
	@for dir in $(SUBDIRS) ;\
		do \
			echo " " ;\
			echo Making in directory $$dir ;\
			(cd $$dir; $(MAKE)) ;\
		done

linktest:
	@for dir in $(SUBDIRS) ;\
		do \
			echo " " ;\
			echo Making linktest in directory $$dir ;\
			(cd $$dir; $(MAKE) linktest) ;\
		done

#
# This also cleans the files after the testing to keep the
# total size down.  You can use TESTARGS to pass arguments to the
# test program; for example, 
# make TESTARGS="-small"
# to run in "small" mode (build executable, run, remove executable)
testing: $(MPIR_HOME)/util/mpirun
	@-for dir in $(TESTDIRS) ;\
		do \
			echo " " ;\
			echo Making testing in directory $$dir ;\
			(cd $$dir; $(MAKE) testing TESTARGS=$(TESTARGS) ; \
	                 $(MAKE) clean ) ;\
		done

#
# This is a version of testing, but it saves the "diff" files in the top 
# level directory
testing_save: $(MPIR_HOME)/util/mpirun
	@-for dir in $(TESTDIRS) ;\
		do \
			echo " " ;\
			echo Making testing in directory $$dir ;\
			(cd $$dir; $(MAKE) testing TESTARGS=$(TESTARGS) ; \
	                 cp $$dir.diff .. ; $(MAKE) clean ) ;\
		done

clean:
	/bin/rm -f test.log *.diff
	@for dir in $(SUBDIRS) ;\
		do \
			echo " " ;\
			echo Making clean in directory $$dir ;\
			(cd $$dir; $(MAKE) clean) ;\
		done

$(MPIR_HOME)/util/mpirun:
	(cd $(MPIR_HOME) ; $(MAKE) mpirun )
