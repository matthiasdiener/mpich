#! /bin/sh
dnl
dnl Caching is usually WRONG for systems with cross-mounted file systems
dnl (the cache file may correspond to a different system).  Since configure
dnl is not on a performance-critical path, go for robustness over speed.
dnl
define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl
dnl
dnl
AC_INIT()
 
AC_ARG_ENABLE(echo, [--enable-echo                      - Turn on strong echoing.  The default is enable=no.] , set -x)

AC_ARG_ENABLE(softerror, [--enable-softerror                 - Turn on soft error, i.e. instead of issuing MSG_ERROR, MSG_WARN + exit 0 are used.  The default is enable=no.], , enable_softerror=no)
 
AC_ARG_ENABLE(g, [--enable-g                         - Turn on the debugging flags, -g, and uses jdb to run the GUI.  The default is enable=no], , enable_g=no)
 
AC_ARG_ENABLE(checkversion, [--enable-checkversion              - Turn on the Java version checking code. Disabling this option means user needs to set JAVA_LIBS and SWING_LIBS by hand. The default is enable=yes], , enable_checkversion=yes)


echo "Configuring Jumpshot-2 with $ac_configure_args"
#
# Find the home directory if not specified
if test "X$srcdir" != "X." -a -s $srcdir/src/Makefile.in ; then
    top_srcdir_abs=$srcdir
else
    PAC_GETWD(top_srcdir_abs,src/Makefile.in)
fi
 
if test -z "$top_srcdir_abs" ; then
    top_srcdir_abs=`pwd`
fi

if test ! -d "$top_srcdir_abs" ; then
    PAC_MSG_ERROR($enable_softerror, [*** $top_srcdir_abs is not a valid directory - cannot continue])
fi

AC_SUBST(top_srcdir_abs)
 
AC_ARG_WITH(java, [--with-java=JAVA_HOME              - The path of the top-level directory of the Java installation.  If this option is not given, configure will try to locate java for you.], JAVA_HOME=$withval, JAVA_HOME="")
 
AC_ARG_WITH(jflags, [--with-jflags=JFLAGS               - supply java compiler flags, e.g. optimization flags, -O, to the java compiler], JFLAGS="$withval")

# Append "-g" to JFLAGS if enable_g=yes
if test $enable_g = "yes"; then
    if test -z "`echo $JFLAGS | grep "\-g"`"; then
        JFLAGS="-g $JFLAGS"
    fi
fi

# Fixup for make
MAKE=${MAKE:-make}
PAC_MAKE_IS_GNUMAKE
PAC_MAKE_IS_BSD44
PAC_MAKE_IS_OSF
PAC_MAKE_VPATH
AC_SUBST(MAKE)
# If we are relying on VPATH and no VPATH is set, then we must exit
if test ! -s src/jumpshot.java -a -z "$VPATH" ; then
    AC_MSG_ERROR([No virtual MAKE path command found.
	You may need to set your make command.
	The GNU make (sometimes available as gnumake) can be used.])
fi
 
# FOUND_ENV_JAVA_HOME shows how JAVA_HOME is found
FOUND_ENV_JAVA_HOME=no
if test -z "$JAVA_HOME" ; then
#   Locate Java from user's PATH
    PAC_PATH_JAVA(JAVA_HOME)
    if test -z "$JAVA_HOME" ; then
#       Locate Java in known location
        PAC_FIND_JAVA(JAVA_HOME)
    fi
    if test -z "$JAVA_HOME" ; then
        AC_MSG_WARN([Cannot locate JAVA in known locations and \$PATH !])
        PAC_MSG_ERROR($enable_softerror, [Put JAVA in your path or supply it as an argument to configure])
    else
#       Set FOUND_ENV_JAVA_HOME to indicate JAVA_HOME is found in PAC_XXX_JAVA
        FOUND_ENV_JAVA_HOME=yes
    fi
fi

# Set the JAVA related tools, like javac and jar.
JC="$JAVA_HOME/bin/javac"
JAR="$JAVA_HOME/bin/jar"
if test $enable_g = "yes"; then
    JVM="$JAVA_HOME/bin/jdb"
else
    JVM="$JAVA_HOME/bin/java"
fi

if test "$FOUND_ENV_JAVA_HOME" = "no" ; then
    AC_MSG_CHECKING([if $JC compiles])
    if test -x "$JC" ; then
        PAC_JAVA_TRY_COMPILE( [$JC], , , [
        public static void main( String args[] )
        {
            System.out.println( "Hello world" );
        }
        ], [ pac_java_working=yes ], [ pac_java_working=no ] )
        if test "$pac_java_working" = "yes" ; then
            AC_MSG_RESULT(yes)
        else
            AC_MSG_RESULT(no)
            PAC_MSG_ERROR($enable_softerror, [$exe does NOT compile, check JAVA_HOME = $JAVA_HOME])
        fi
    else
        AC_MSG_RESULT(no)
        PAC_MSG_ERROR($enable_softerror, [$exe does NOT exist, check JAVA_HOME = $JAVA_HOME])
    fi
fi

for exe in "$JAR" "$JVM" ; do
    AC_MSG_CHECKING([if $exe exists])
    if test -x "$exe" ; then
        AC_MSG_RESULT(yes)
    else
        AC_MSG_RESULT(no)
        PAC_MSG_ERROR($enable_softerror, [$exe does NOT exist, check JAVA_HOME = $JAVA_HOME])
    fi
done

# CHECK the version of Java used
if test "$enable_checkversion" = "yes" ; then
    AC_MSG_CHECKING(for Java version)
    VERSION=`$JAVA_HOME/bin/java -fullversion 2>&1`
    case "$VERSION" in
        *1.0*)
            AC_MSG_RESULT(1.0)
            AC_MSG_WARN([Java $VERSION is too old to be used with Jumpshot-2 !])
            PAC_MSG_ERROR($enable_softerror, [Jumpshot-2 is designed to be used with Java 1.1])
            ;;
        *1.1*)
            AC_MSG_RESULT(1.1)
            enable_internalswing=yes
            if test -f "$JAVA_HOME/lib/classes.zip" ; then
                JAVA_LIBS="$JAVA_HOME/lib/rt.jar:$JAVA_HOME/lib/classes.zip:$JAVA_HOME/classes"
            else
                AC_MSG_WARN([$JAVA_HOME/lib/classes.zip does NOT exist])
                PAC_MSG_ERROR($enable_softerror, [JAVA_LIBS cannot be set, neither can CLASSPATH !])
            fi
            ;;
        *1.2*|*1.3*)
            AC_MSG_RESULT(1.2 or higher)
            enable_internalswing=no
            SWING_LIBS=""
            AC_MSG_WARN([$VERSION is incompatible with Jumpshot-2 !])
            PAC_MSG_ERROR($enable_softerror, [Jumpshot-2 is designed to be used with Java 1.1, preferably 1.1.6 or better, and Swing 1.0.3.])
            ;;
        *)
            AC_MSG_RESULT(unknown)
            AC_MSG_WARN([Jumpshot-2 is designed to be used with Java 1.1, preferably 1.1.6 or better, and Swing 1.0.3.])
            AC_MSG_WARN([Any higher version of Java, like 1.2, is likely to cause problems])
            PAC_MSG_ERROR($enable_softerror, [Check if $JAVA_HOME is valid])
            ;;
    esac
fi

CPRP=cp
RM=rm
MKDIR=mkdir

# VPATH build: Set the swingbuild_dir if JAVA 1.1 is used
if test "$enable_internalswing" = "yes" ; then
    if test -z "$swingbuild_dir" ; then
        swingbuild_dir="`pwd`/swing"
    fi
    if test ! -d $swingbuild_dir ; then
        echo "creating $swingbuild_dir from source"
        $CPRP -pr $srcdir/swing $swingbuild_dir ;
    fi
    AC_SUBST(swingbuild_dir)

    if test -z "$SWING_LIBS"; then
        SWING_LIBS="$swingbuild_dir/swing.jar"
    fi
    
    SWING_LIBRARIES=`echo $SWING_LIBS | sed 's/:/ /g'`
    for library in $SWING_LIBRARIES ; do
        AC_MSG_CHECKING([for $library])
        if test -f "$library"; then
            AC_MSG_RESULT(yes)
        else
            AC_MSG_RESULT(no)
            AC_MSG_WARN([$library in \$SWING_LIBS does NOT exist!])
            PAC_MSG_ERROR($enable_softerror, [hence CLASSPATH cannot be set])
        fi
    done
fi

AC_SUBST(JAVA_HOME)
AC_SUBST(JAVA_LIBS)
AC_SUBST(JFLAGS)
AC_SUBST(JC)
AC_SUBST(JAR)
AC_SUBST(JVM)
AC_SUBST(SWING_LIBS)

#
# Naming the various build directories, don't inherit from environment
#
rootbuild_dir=`pwd`
for dir in lib doc logfiles bin ; do
    dirname=${dir}build_dir
    eval dirvalue=\$"$dirname"
    eval $dirname=$rootbuild_dir/$dir
done

# VPATH build: Set the libbuild_dir
if test ! -d $libbuild_dir ; then
    echo "creating $libbuild_dir from source"
    $CPRP -pr $srcdir/lib $libbuild_dir ;
fi
AC_SUBST(libbuild_dir)

# VPATH build: Set the docbuild_dir
if test ! -d $docbuild_dir ; then
    echo "creating $docbuild_dir from source"
    $CPRP -pr $srcdir/doc $docbuild_dir ;
    $RM -rf $docbuild_dir/old ;
fi
AC_SUBST(docbuild_dir)

# VPATH build: Set the logfilesbuild_dir
if test ! -d $logfilesbuild_dir ; then
    echo "creating $logfilesbuild_dir from source"
    $CPRP -pr $srcdir/logfiles $logfilesbuild_dir ;
fi
AC_SUBST(logfilesbuild_dir)

# VPATH: Set the binbuild_dir
if test ! -d $binbuild_dir ; then
    echo "creating directory $binbuild_dir"
    $MKDIR $binbuild_dir ; 
fi
AC_SUBST(binbuild_dir)



AC_OUTPUT(Makefile src/Makefile bin/jumpshot sbin/install-viewer)

for script in "bin/jumpshot" "sbin/install-viewer"; do
    if test -f "$script" ; then
        chmod a+x $script
    else
        PAC_MSG_ERROR($enable_softerror, [$script is not a valid file - Make sure you have configured with a valid Jumpshot-2 source directory])
    fi
done
