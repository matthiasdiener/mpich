dnl
dnl Caching is usually WRONG for systems with cross-mounted file systems
dnl (the cache file may correspond to a different system).  Since configure
dnl is not on a performance-critical path, go for robustness over speed.
dnl
define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl
dnl
dnl
AC_INIT()

dnl Place the viewers into the common prefix location
AC_ARG_WITH(common-prefix,
[--with-common-prefix=dir           - Set the installation prefix for 
                                     the Jumpshot-2 viewer.  This allows
				     a separate prefix for MPICH and for
				     Jumpshot when they are installed 
				     together],
,with_common_prefix=NONE)

if test "$with_common_prefix" != "NONE" ; then
    prefix=$with_common_prefix
fi 

echo "Configuring MPE-LogViewers with $ac_configure_args"
#
# Find the home directory if not specified
if test "X$srcdir" != "X." -a -s $srcdir/bin/logviewer.in ; then
    top_srcdir_abs=$srcdir
else
    PAC_GETWD(top_srcdir_abs,./bin/logviewer.in)
fi

if test -z "$top_srcdir_abs" ; then
    top_srcdir_abs=`pwd`
fi

if test ! -d "$top_srcdir_abs" ; then
    AC_MSG_ERROR([*** $top_srcdir_abs is not a valid directory - cannot continue])
fi

AC_SUBST(top_srcdir_abs)

# Fixup for make
MAKE=${MAKE:-make}
PAC_MAKE_IS_GNUMAKE
PAC_MAKE_IS_BSD44
PAC_MAKE_IS_OSF
PAC_MAKE_VPATH
AC_SUBST(MAKE)
# If we are relying on VPATH and no VPATH is set, then we must exit
if test ! -s bin/logviewer.in -a -z "$VPATH" ; then
    AC_MSG_ERROR([No virtual MAKE path command found.
	You may need to set your make command
	The GNU make (sometimes available as gnumake) can be used.])
fi

CPRP=cp
RM=rm
MKDIR=mkdir

# VPATH: Set the binbuild_dir
if test -z "$binbuild_dir" ; then
    binbuild_dir="`pwd`/bin"
fi
if test ! -d $binbuild_dir ; then
    echo "creating directory $binbuild_dir"
    $MKDIR $binbuild_dir ;
fi
AC_SUBST(binbuild_dir)


# Options to disselect individual viewer
AC_ARG_ENABLE( upshot, 
[--enable-upshot                    - Build Upshot which is the ALOG viewer 
                                     if it exists.  The default is enable=yes.], ,enable_upshot=yes )
AC_ARG_ENABLE( nupshot, 
[--enable-nupshot                   - Build Nupshot which is the ALOG viewer 
                                     if it exists.  The default is enable=yes.], ,enable_nupshot=yes )
AC_ARG_ENABLE( jumpshot2, 
[--enable-jumpshot2                 - Build Jumpshot-2 which is the CLOG 
                                     viewer if it exists.  The default 
                                     is enable=yes.], ,enable_jumpshot2=yes )
AC_ARG_ENABLE( jumpshot3, 
[--enable-jumpshot3                 - Build Jumpshot-3 which is the SLOG 
                                     viewer if it exists.  The default 
                                     is enable=yes.], ,enable_jumpshot3=yes )

# Options to disselect more than 1 viewers
AC_ARG_ENABLE( jumpshots, 
[--enable-jumpshots                 - Do not build Jumpshot-2 and Jumpshot-3.
                                     The default is enable=yes.],
,enable_jumpshots=yes )
AC_ARG_WITH( java, 
[--without-java                     - Do not build any viewers that 
                                     requires Java],,)

# The XXX in XXX_dirname below must match with AC_ARG_ENABLE( XXX, .. ) above
upshot_dirname="upshot"
nupshot_dirname="nupshot"
jumpshot2_dirname="jumpshot-2"
jumpshot3_dirname="jumpshot-3"

# Substitute various dirnames needed by $bindir/logviewer.in 
AC_SUBST(upshot_dirname)
AC_SUBST(nupshot_dirname)
AC_SUBST(jumpshot2_dirname)
AC_SUBST(jumpshot3_dirname)

if test "$with_java" = "no" -o "$enable_jumpshots" = "no" ; then
    trial_pkgs="upshot nupshot"
else
    trial_pkgs="upshot nupshot jumpshot2 jumpshot3"
fi

ac_configure_args="$ac_configure_args --enable-softerror"
PKGS=""
selected_pkgs=""
for pkg in $trial_pkgs ; do
    dirname=${pkg}_dirname
    eval dirvalue=\$"$dirname"
    flagname=enable_${pkg}
    eval flagvalue=\$"$flagname"
    if test "$flagvalue" = "yes" -a -s $srcdir/$dirvalue/configure ; then
        PKGS="$PKGS $dirvalue"
        selected_pkgs="$selected_pkgs $pkg"
    fi
done
AC_CONFIG_SUBDIRS($PKGS)

AC_SUBST(PKGS)

AC_OUTPUT( Makefile bin/logviewer sbin/install-viewers )

configured_pkgs=""
for pkg in $selected_pkgs ; do
    dirname=${pkg}_dirname
    eval dirvalue=\$"$dirname"
    if test -s $dirvalue/Makefile ; then
        configured_pkgs="$configured_pkgs $dirvalue"
    fi
done

if test -z "$configured_pkgs" ; then
    AC_MSG_WARN( [No viewer has been configured] )
else
    AC_MSG_RESULT( [$configured_pkgs have been configured] )
fi

for script in "bin/logviewer" "sbin/install-viewers" ; do
    if test -f "$script" ; then
	chmod a+x $script
    else
        AC_MSG_ERROR([*** $script is not a valid file - Make sure you have configured with a valid viewers source directory])
    fi
done
