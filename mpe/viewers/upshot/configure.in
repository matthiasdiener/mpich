i#! /bin/sh
dnl
dnl Caching is usually WRONG for systems with cross-mounted file systems
dnl (the cache file may correspond to a different system).  Since configure
dnl is not on a performance-critical path, go for robustness over speed.
dnl
define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl
dnl
dnl
AC_INIT()
 
AC_ARG_ENABLE(echo, [--enable-echo                    - Turn on strong echoing.  The default is enable=no.] ,set -x)

AC_ARG_ENABLE(softerror, [--enable-softerror               - Turn on soft error, i.e. instead of issuing MSG_ERROR, MSG_WARN + exit 0 are used.  The default is enable=no.], , enable_softerror=no)

echo "Configuring Upshot with $ac_configure_args"
#
# Find the home directory if not specified
if test "X$srcdir" != "X." -a -s $srcdir/bin/upshot.in ; then
    top_srcdir_abs=$srcdir
else
    PAC_GETWD(top_srcdir_abs,bin/upshot.in)
fi

if test ! -d "$top_srcdir_abs" ; then
    PAC_MSG_ERROR($enable_softerror, [*** $top_srcdir_abs is not a valid directory - cannot continue])
fi

AC_SUBST(top_srcdir_abs)

# Options to give hint about where Wish shell is located
wishloc=""
AC_ARG_WITH(tcldir, [--with-tcldir=tcldir             - The path to the tcl directory.  Wish shell will be assumed to be at \$tcldir/bin/wish.], wishloc=$withval/bin/wish)
AC_ARG_WITH(tkdir, [--with-tkdir=tkdir               - The path to the tk directory.  Wish shell will be assumed to be at \$tkdir/bin/wish.], wishloc=$withval/bin/wish)
AC_ARG_WITH(wish, [--with-wish=wishloc              - The path to the tcl/tk wish executable.  If this option is not given, configure will try to locate wish for you.], wishloc=$withval)

# Fixup for make
MAKE=${MAKE:-make}
PAC_MAKE_IS_GNUMAKE
PAC_MAKE_IS_BSD44
PAC_MAKE_IS_OSF
# PAC_MAKE_VPATH
AC_SUBST(MAKE)
# If we are relying on VPATH and no VPATH is set, then we must exit
# if test ! -s bin/upshot.in -a -z "$VPATH" ; then
#     echo "No virtual MAKE path command found."
#     echo "You may need to set your make command"
#     echo "The GNU make (sometimes available as gnumake) can be used."
#     exit 1 fi

if test -z "$wishloc" ; then
    PAC_FIND_WISH
fi

# Test that wish exists
if test -n "$wishloc" ; then
   namelen=`expr "$wishloc" : ".*"`
   if test $namelen -gt 26 ; then
        echo "The path for wish, $wishloc, may be too long"
        echo "for some Unix systems to accept as a command interpreter."
        echo "This may cause problems when using upshot."
        echo "(Some systems limit the length to 26 characters!)"
   fi
   if test ! -x $wishloc ; then
       wishloc=
   fi
fi
if test -z "$wishloc" ; then
    PAC_MSG_ERROR($enable_softerror, [Could not find executable wish (needed for Upshot)])
fi

AC_SUBST(wishloc)

AC_OUTPUT(Makefile sbin/install-viewer)

for script in "sbin/install-viewer"; do
    if test -f "$script" ; then
        chmod a+x $script
    else
        PAC_MSG_ERROR($enable_softerror, [*** $script is not a valid file - Make sure you have configured with a valid Upshot source directory])
    fi
done
