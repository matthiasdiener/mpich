# Make file for the MPI DLL
ARCH        = @ARCH@
DEVICE      = @DEVICE@
CC          = @CC@
CFLAGS      = -g @CC_SHARED_OPT_FOR_TV@

### End User configurable options ###

SHELL = /bin/sh
#
# The suffixes we'll need.
#

.SUFFIXES:

.SUFFIXES: .c .h .o

# Target library
LIB = libtvmpich.so

#
# The rules for regenerating things
#
.c.o:
	-$(CC) $(CFLAGS) $(INCLUDES) -c $<

# Compilers and flags

REMOVER = /bin/rm -f
LN  = ln -s
CPP = /lib/cpp

# *******************************************************************
# Set up flags to build position independent code and link a shared
# library. Very target specific
#	

LINKER = $(CC) $(CFLAGS) 
LDFLAGS= -G

# *******************************************************************
# The actual definitions.  This is the part which must be maintained.
# *******************************************************************

#
# Objects to build
#
SRCS		= dll_mpich.c
OBJS		= dll_mpich.o
LIBDIR = ../../build/$(ARCH)/$(DEVICE)/lib

all update:	$(LIB)

#
# For the moment, we build both with the original makefile, and with
# the makesharedlib script
# Use so* to handle so.<versioninfo>
#
$(LIBDIR)/$(LIB): $(LIB)
	@-if test -f $(LIB) ; then cp $(LIB) $(LIBDIR)/$(LIB) ; fi
	 -if test -f $(LIB) ; then cp libtvmpich.so* $(LIBDIR) ; fi

# Because this is an optional library, we don't stop if there is an error
# The following works for Solaris and some other systems
#	$(LINKER) $(LDFLAGS) -o $(LIB) $(OBJS) $(LIBS) ; \
# Several makes could not handle these expansions, so we have replaced the
# filenames directly
#$(LIB): $(OBJS)
libtvmpich.so: dll_mpich.o
	-if test "@SHAREDKIND_FOR_TV@" != "ignore" ; then \
	$(REMOVER) $(LIB); \
	( CC="$(CC)" ; export CC ; CLINKER="@CLINKER@" ; export CLINKER ; \
	../../util/makesharedlib -lib=libtvmpich.a -obj="$(OBJS)" \
		 -kind=@SHAREDKIND_FOR_TV@ -local ; ) fi

compile: $(OBJS)

# ****************************************************************
# Some other entrypoints.
# ****************************************************************
MPI_COBJECTS = 
MPI_CSOURCES = 
MPI_TSOURCES = 
MPI_WSOURCES = 
MPI_WOBJECTS = 

MPI_SOURCES = $(MPI_CSOURCES) $(MPI_WSOURCES)
MPI_OBJECTS = $(MPI_COBJECTS) $(MPI_WOBJECTS)
MPI_INCLUDE = ../../include/mpi.h

default: $(LIBDIR)/$(LIB)

profile: 

#$(MPI_OBJECTS) :  $(MPI_INCLUDE)

# default_all is the same as default, but without the RANLIB.  This
# can speed up the build (ranlibs can take a LONG time).  profile_all 
# is the same, but for the profile library
default_all: $(LIBDIR)/$(LIB)
profile_all: $(MPI_OBJECTS)
wrapperlib: $(MPI_WOBJECTS)

source_names:
	@echo $(MPI_CSOURCES)

clean:
	-$(REMOVER) *.o
	-$(REMOVER) *.i
	-$(REMOVER) *.s
	-$(REMOVER) *.cxx.log
	-$(REMOVER) *.cxx.errors
	-$(REMOVER) $(LIB)
	-$(REMOVER) libtvmpich.so*

rebuild: clean $(LIB)
