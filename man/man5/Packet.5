.TH Packet 5 "8/23/1995" " " "ADI"
.SH NAME
Packet implementation - Describes the packets used the the Chameleon
and Channel implementations of the ADI

.SH OVERVIEW
The Chameleon and Channel implementations send message in 
.B packets

containing either header information, data, or both.

The design here is fairly general, allowing both eager and reluctant
(rendevous) protocols for each of the MPI modes.  Some simplification can
be achieved if, for example, the MPI Synchronous mode is only implemented
with the reluctant protocol.

This is discussed in more detain in 
.B Creating a new MPICH device using the
Channel interface
, and is included here to give a quick summary of the
approach.

.SH EAGER
In the eager protocol, the message data is sent without first asking the
destination node (for example, to check on buffer space).  In order to
achieve better use of the underlying message-passing systems, there are
two major categories: long and short.  In a short message, the message
data and message envelope (context, tag, lrank) are sent together.
In a long message, the data is sent separately from the envelope (avoiding
any data copies).  If the MPI mode is Synchronous or Ready, then
some additional information is included.
In the synchronous case, it is necessary for the receiver to tell the
sender when the receive has started (but see Rendevous below); this
is done with the 
.I MPID_PKT_SYNC_ACK
.
In the ready case, if the matching receive is 
.B not
 available, then an
error message can be sent back to the sender with 
.I MPID_PKT_READY_ERROR
.

In the long message case, the 
.B sender
 may use nonblocking send operation.
On some systems, it may be necessary to ask the sender to execute an
MPI_Wait-like operation on the nonblocking send in order to get a
matching receive to complete.  On these systems, the macro

.I MPID_WSEND_BEFORE_WRECV
 is defined, and the MPI_Wait on the
send is requested with the 
.I MPID_PKT_COMPLETE_SEND
 packet.  (The systems
that require this tend to use rendevous or reluctant protocols for long
messages).  
.B THIS IS UNUSED
.

.SH RENDEVOUS
In the Rendevous protocol, a 
.B long
 send is not begun until the receiver
oks it.  The request is made with 
.I MPID_PKT_REQUEST_SEND
, and
is acknowledged with 
.I MPID_PKT_OK_TO_SEND
.  Note that a message-passing
implementation may make use of a "ready-receiver" send once the

.I OK_TO_SEND
 has been received.  Also note that the rendevous protocol
handles standard and synchronous sends identically; no separate 
.I SYNC_ACK

packet is required.

Depending on the system, it may or may not be advantageous to compress
the size of the data in the packet.  If the macro 
.I MPID_PKT_COMPRESSED

is defined, then the envelope data is encoded into 2 fewer ints.

.SH GET
The 
.B get
 protocol is used on shared memory systems.  The behavior of
this protocol is very much like the 
.B rendevous
 protocol, except that the
packets contain information needed to access the data directly from
memory shared by the sender and the receiver (thus requiring a different
packet type).
