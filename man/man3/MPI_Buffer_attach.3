.TH MPI_Buffer_attach 3 "12/21/1995" " " "MPI"
.SH NAME
MPI_Buffer_attach \- Attaches a user-defined buffer for sending

.SH INPUT PARAMETERS
.PD 0
.TP
.B buffer 
- initial buffer address (choice) 
.PD 1
.PD 0
.TP
.B size 
- buffer size, in bytes (integer) 
.PD 1

.SH NOTES
The size given should be the sum of the sizes of all outstanding Bsends that
you intend to have, plus a few hundred bytes for each Bsend that you do.
For the purposes of calculating size, you should use 
.I MPI_Pack_size
.
In other words, in the code
.nf
     MPI_Buffer_attach( buffer, size );
     MPI_Bsend( ..., count=20, datatype=type1,  ... );
     ...
     MPI_Bsend( ..., count=40, datatype=type2, ... );
.fi

the value of 
.I size
in the MPI_Buffer_attach call should be greater than
the value computed by
.nf
     MPI_Pack_size( 20, type1, comm, &s1 );
     MPI_Pack_size( 40, type2, comm, &s2 );
     size = s1 + s2 + 2 * MPI_BSEND_OVERHEAD;
.fi

The 
.I MPI_BSEND_OVERHEAD
gives the maximum amount of space that may be used in
the buffer for use by the BSEND routines in using the buffer.  This value
is in 
.I mpi.h
(for C) and 
.I mpif.h
(for Fortran).

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.
.SH SYNOPSIS
.nf
#include "mpi.h"
int MPI_Buffer_attach( buffer, size )
void *buffer;
int  size;

.fi

.SH LOCATION
 bufattach.c
