.TH MPI_Unpack 3 "1/3/1996" " " "MPI"
.SH NAME
MPI_Unpack \- Unpack a datatype into contiguous memory

.SH INPUT PARAMETERS
.PD 0
.TP
.B inbuf 
- input buffer start (choice) 
.PD 1
.PD 0
.TP
.B insize 
- size of input buffer, in bytes (integer) 
.PD 1
.PD 0
.TP
.B position 
- current position in bytes (integer) 
.PD 1
.PD 0
.TP
.B outcount 
- number of items to be unpacked (integer) 
.PD 1
.PD 0
.TP
.B datatype 
- datatype of each output data item (handle) 
.PD 1
.PD 0
.TP
.B comm 
- communicator for packed message (handle) 
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B outbuf 
- output buffer start (choice) 
.PD 1

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.

.SH SEE ALSO
 MPI_Pack, MPI_Pack_size
.br
.SH SYNOPSIS
.nf
#include "mpi.h"
int MPI_Unpack ( inbuf, insize, position, outbuf, outcount, type, comm )
void         *inbuf;
int           insize;
int          *position;
void         *outbuf;
int           outcount;
MPI_Datatype  type;
MPI_Comm      comm;

.fi

.SH LOCATION
 unpack.c
