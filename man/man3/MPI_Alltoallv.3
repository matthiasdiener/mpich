.TH MPI_Alltoallv 3 "12/21/1995" " " "MPI"
.SH NAME
MPI_Alltoallv \- Sends data from all to all processes, with a displacement

.SH INPUT PARAMETERS
.PD 0
.TP
.B sendbuf 
- starting address of send buffer (choice) 
.PD 1
.PD 0
.TP
.B sendcounts 
- integer array equal to the group size 
specifying the number of elements to send to each processor 
.PD 1
.PD 0
.TP
.B sdispls 
- integer array (of length group size). Entry 
.I j
specifies the displacement (relative to sendbuf  from
which to take the outgoing data destined for process  
.I j
.PD 1
.PD 0
.TP
.B sendtype 
- data type of send buffer elements (handle) 
.PD 1
.PD 0
.TP
.B recvcounts 
- integer array equal to the group size 
specifying the maximum number of elements that can be received from
each processor 
.PD 1
.PD 0
.TP
.B rdispls 
- integer array (of length group size). Entry 
.I i
specifies the displacement (relative to recvbuf  at
which to place the incoming data from process  
.I i
.PD 1
.PD 0
.TP
.B recvtype 
- data type of receive buffer elements (handle) 
.PD 1
.PD 0
.TP
.B comm 
- communicator (handle) 
.PD 1

.SH OUTPUT PARAMETER
.PD 0
.TP
.B recvbuf 
- address of receive buffer (choice) 
.PD 1

.SH NOTES FOR FORTRAN
All MPI routines in Fortran (except for 
.I MPI_WTIME
and 
.I MPI_WTICK
) have
an additional argument 
.I ierr
at the end of the argument list.  
.I ierr
is an integer and has the same meaning as the return value of the routine
in C.  In Fortran, MPI routines are subroutines, and are invoked with the
.I call
statement.

All MPI objects (e.g., 
.I MPI_Datatype
, 
.I MPI_Comm
) are of type 
.I INTEGER
in Fortran.
.SH SYNOPSIS
.nf
#include "mpi.h"
int MPI_Alltoallv ( sendbuf, sendcnts, sdispls, sendtype, 
                    recvbuf, recvcnts, rdispls, recvtype, comm )
void             *sendbuf;
int              *sendcnts;
int              *sdispls;
MPI_Datatype      sendtype;
void             *recvbuf;
int              *recvcnts;
int              *rdispls; 
MPI_Datatype      recvtype;
MPI_Comm          comm;

.fi

.SH LOCATION
 alltoallv.c
